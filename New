case LWS_CALLBACK_CLIENT_RECEIVE: {
    std::string response((const char*)in, len);
    received_payload += response;

    try {
        if (json::accept(received_payload)) {
            auto j = json::parse(received_payload);
            
            std::cout << "[✅ Full JSON Received]:\n" << j.dump(2) << "\n";

            if (j.contains("result") && j["result"].contains("root")) {
                std::cout << "📦 DOM received. Indexing clickable elements...\n";
                int index = 1;
                traverse_dom(j["result"]["root"], index);
                dom_received = true;
                lws_cancel_service(context);
            }

            received_payload.clear();
        } else {
            std::cout << "⏳ Waiting for full JSON (currently incomplete)...\n";
        }
    } catch (const std::exception &e) {
        std::cerr << "❌ JSON parse error: " << e.what() << "\n";
        received_payload.clear();  // Optional: clear on error
    }
    break;
}
